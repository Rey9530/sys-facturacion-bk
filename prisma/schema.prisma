// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model hos_usr_usuario {
//   usr_code           String   @id(map: "mar_usr_pk") @default(uuid())
//   usr_code_employe   String
//   usr_names          String
//   usr_surnames       String
//   usr_password       String
//   usr_attempts_faile Int      @default(0) @db.SmallInt
//   usr_status         Estado   @default(ACTIVO)
//   usr_date_create    DateTime @default(now())
//   usr_date_update    DateTime @default(now()) @db.Timestamptz()
//   usr_user_create    String
//   usr_usrer_update   String
// }

// ===========================================================================================

model Usuarios {
  id                Int              @id @default(autoincrement())
  usuario           String
  password          String
  nombres           String
  apellidos         String
  dui               String?
  foto              String?          @unique
  estado            Estado           @default(ACTIVO)
  fecha_creacion    DateTime         @default(now()) @db.Timestamptz()
  id_rol            Int
  Roles             Roles            @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_rol")
  id_sucursal       Int
  Sucursales        Sucursales       @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_sucursal")
  id_sucursal_reser Int?
  Facturas          Facturas[]
  Proveedores       Proveedores[]
  Compras           Compras[]
  CierresDiarios    CierresDiarios[]
  Agenda            Agenda[]
  OrdenDeSalida     OrdenDeSalida[]

  @@index([id_rol], name: "fk_usuario_rol_id")
  @@index([id_sucursal], name: "fk_usuario_sucursal_id")
}

model GeneralData {
  id_general            Int           @id @default(autoincrement())
  nombre_sistema        String
  direccion             String?
  razon                 String?
  nit                   String?
  nrc                   String?
  cod_actividad         String?
  desc_actividad        String?
  nombreComercial       String?
  contactos             String?
  impuesto              Float?        @default(0.13)
  id_tipo_contribuyente Int?
  TipoCliente           TiposCliente? @relation(fields: [id_tipo_contribuyente], references: [id_tipo_cliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_tipo")

  @@index([id_tipo_contribuyente], name: "fk_sistema_tipo_id")
}

enum Estado {
  ACTIVO
  INACTIVO
}

model Roles {
  id_rol   Int        @id @default(autoincrement())
  nombre   String
  Estado   Estado     @default(ACTIVO)
  Usuarios Usuarios[]
}

model Bancos {
  id_banco    Int           @id @default(autoincrement())
  nombre      String
  Estado      Estado        @default(ACTIVO)
  Proveedores Proveedores[]
}

model Sucursales {
  id_sucursal             Int                     @id @default(autoincrement())
  nombre                  String
  color                   String?
  complemento             String?
  telefono                String?
  correo                  String?
  id_municipio            Int?
  Municipio               Municipios?             @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sucursal_municipio")
  id_tipo_establecimiento Int?
  DTETipoEstablecimiento  DTETipoEstablecimiento? @relation(fields: [id_tipo_establecimiento], references: [id_tipo_establecimiento], onDelete: NoAction, onUpdate: NoAction, map: "fk_sucursal_tipo_establecimiento")
  estado                  Estado                  @default(ACTIVO)
  Bodegas                 Bodegas[]
  Usuarios                Usuarios[]
  FacturasBloques         FacturasBloques[]
  Cliente                 Cliente[]
  Facturas                Facturas[]
  Compras                 Compras[]
  Agenda                  Agenda[]
  CierresDiarios          CierresDiarios[]
}

model Bodegas {
  id_bodega     Int             @id @default(autoincrement())
  nombre        String
  es_principal  Int             @default(0) // 0=no, 1=si // debe existir una prinicpal por sucursal
  estado        Estado          @default(ACTIVO)
  id_sucursal   Int
  Sucursales    Sucursales      @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_bodega_sucursal")
  Compras       Compras[]
  Inventario    Inventario[]
  OrdenDeSalida OrdenDeSalida[]

  @@index([id_sucursal], name: "fk_bodega_sucursal_id")
}

// Tablas del modulo Facturacion
model CatalogoCategorias {
  id_categoria       Int                  @id @default(autoincrement())
  nombre             String
  estado             Estado               @default(ACTIVO)
  id_categoria_padre Int?
  categoria_padre    CatalogoCategorias?  @relation("categoria_padre", fields: [id_categoria_padre], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "categoria_padre_fk")
  categoria_hijos    CatalogoCategorias[] @relation("categoria_padre")
  catalogo           Catalogo[]
}

model CatalogoTipo {
  id_tipo  Int        @id @default(autoincrement())
  nombre   String
  estado   Estado     @default(ACTIVO)
  catalogo Catalogo[]
}

model Catalogo {
  id_catalogo         Int                @id @default(autoincrement())
  id_tipo             Int
  id_categoria        Int
  codigo              String?            @db.Text
  nombre              String
  descripcion         String?            @db.Text
  precio_sin_iva      Float?             @default(0)
  precio_con_iva      Float?             @default(0)
  existencias_minimas Int?               @default(0)
  existencias_maximas Int?               @default(0)
  Tipo                CatalogoTipo       @relation(fields: [id_tipo], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_catalogo")
  Categorias          CatalogoCategorias @relation(fields: [id_categoria], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_categoria_sefvicio")
  estado              Estado             @default(ACTIVO)
  fecha_creacion      DateTime           @default(now()) @db.Timestamptz()

  FacturasDetalle      FacturasDetalle[]
  ComprasDetalle       ComprasDetalle[]
  Kardex               Kardex[]
  Inventario           Inventario[]
  OrdenDeSalidaDetalle OrdenDeSalidaDetalle[]

  @@index([id_tipo], name: "fk_tipo_catalogo_id")
  @@index([id_categoria], name: "fk_categoria_sefvicio_id")
}

enum EstadoFactura {
  ACTIVO
  ANULADA
}

enum FacturaTiposDescuentos {
  ITEM
  GLOBAL
  AMBOS
  INACTIVO
}

model FacturasTipos {
  id_tipo_factura Int               @id @default(autoincrement())
  nombre          String
  codigo          String?
  estado          Estado            @default(ACTIVO)
  Bloques         FacturasBloques[]
  Compras         Compras[]
}

model DTEActividadEconomica {
  id_actividad Int    @id @default(autoincrement())
  nombre       String
  codigo       String
  estado       Estado @default(ACTIVO)
}

model DTETipoEstablecimiento {
  id_tipo_establecimiento Int          @id @default(autoincrement())
  nombre                  String
  codigo                  String
  estado                  Estado       @default(ACTIVO)
  Sucursales              Sucursales[]
}

model DTETipoDocumentoIdentificacion {
  id_tipo_documento Int       @id @default(autoincrement())
  nombre            String
  codigo            String
  estado            Estado    @default(ACTIVO)
  Cliente           Cliente[]
}

model FacturasMetodosDePago {
  id_metodo_pago Int        @id @default(autoincrement())
  nombre         String
  estado         Estado     @default(ACTIVO)
  Facturas       Facturas[]
}

model FacturasDescuentos {
  id_descuento    Int                    @id @default(autoincrement())
  nombre          String
  porcentaje      Int
  isItem          FacturaTiposDescuentos @default(AMBOS)
  estado          Estado                 @default(ACTIVO)
  Facturas        Facturas[]
  FacturasDetalle FacturasDetalle[]
}

model FacturasBloques {
  id_bloque       Int           @id @default(autoincrement())
  tira            String
  autorizacion    String        @default("")
  resolucion      String?       @default("")
  desde           Int
  hasta           Int
  actual          Int
  serie           String
  fecha_creacion  DateTime      @default(now())
  id_tipo_factura Int           @default(0)
  Tipo            FacturasTipos @relation(fields: [id_tipo_factura], references: [id_tipo_factura], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_bloque_tipo")
  id_sucursal     Int?
  Sucursal        Sucursales?   @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_bloque_sucursal")
  estado          Estado        @default(ACTIVO)
  Facturas        Facturas[]

  @@index([id_sucursal], name: "fk_fatura_bloque_sucursal_id")
  @@index([id_tipo_factura], name: "fk_fatura_bloque_tipo_id")
}

model Departamentos {
  id_departamento Int          @id @default(autoincrement())
  nombre          String
  codigo_iso      String
  estado          Estado       @default(ACTIVO)
  Municipios      Municipios[]
}

model Municipios {
  id_municipio Int    @id @default(autoincrement())
  nombre       String
  estado       Estado @default(ACTIVO)

  id_departamento Int           @default(0)
  Departamento    Departamentos @relation(fields: [id_departamento], references: [id_departamento], onDelete: NoAction, onUpdate: NoAction, map: "fk_municipio_departamento")

  Facturas    Facturas[]
  Cliente     Cliente[]
  Proveedores Proveedores[]
  Sucursales  Sucursales[]

  @@index([id_departamento], name: "fk_municipio_departamento_id")
}

model TiposCliente {
  id_tipo_cliente Int           @id @default(autoincrement())
  nombre          String
  estado          Estado        @default(ACTIVO)
  Cliente         Cliente[]
  GeneralData     GeneralData[]
  Proveedores     Proveedores[]
}

model Cliente {
  id_cliente                     Int                             @id @default(autoincrement())
  nombre                         String?                         @default("")
  giro                           String?                         @default("")
  razon_social                   String?                         @default("")
  registro_nrc                   String?                         @default("")
  nit                            String?                         @default("")
  id_municipio                   Int?                            @default(0)
  Municipio                      Municipios?                     @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_municipio")
  direccion                      String?                         @default("")
  telefono                       String?                         @default("")
  correo                         String?                         @default("")
  dui                            String?                         @default("")
  foto_url_nrc                   String?                         @default("")
  foto_obj_nrc                   String?                         @db.Text
  estado                         Estado                          @default(ACTIVO)
  fecha_creacion                 DateTime                        @default(now())
  Facturas                       Facturas[]
  id_sucursal                    Int?
  Sucursal                       Sucursales?                     @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_sucursal")
  id_tipo_documento              Int?
  num_ducumento_identificacion   String?                         @default("")
  cod_actividad                  String?
  desc_actividad                 String?
  DTETipoDocumentoIdentificacion DTETipoDocumentoIdentificacion? @relation(fields: [id_tipo_documento], references: [id_tipo_documento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_tipo_documento")
  id_tipo_cliente                Int?
  TipoCliente                    TiposCliente?                   @relation(fields: [id_tipo_cliente], references: [id_tipo_cliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_tipo")

  @@index([id_tipo_cliente], name: "fk_cliente_tipo_id")
  @@index([id_sucursal], name: "fk_cliente_sucursal_id")
  @@index([id_municipio], name: "fk_cliente_municipio_id")
}

model Facturas {
  id_factura      Int                   @id @default(autoincrement())
  numero_factura  String                @default("0")
  fecha_creacion  DateTime              @default(now())
  cliente         String                @default("")
  direccion       String?               @default("")
  no_registro     String?               @default("")
  nit             String?               @default("")
  giro            String?               @default("")
  id_municipio    Int?                  @default(0)
  Municipio       Municipios?           @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_municipio")
  id_cliente      Int?
  Cliente         Cliente?              @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_cliente")
  id_bloque       Int                   @default(0)
  Bloque          FacturasBloques       @relation(fields: [id_bloque], references: [id_bloque], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_bloque")
  id_descuento    Int?                  @default(0)
  Descuento       FacturasDescuentos?   @relation(fields: [id_descuento], references: [id_descuento], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_descuento")
  id_metodo_pago  Int                   @default(0)
  Metodo          FacturasMetodosDePago @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_methodo_pago")
  id_usuario      Int                   @default(0)
  Usuario         Usuarios              @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_usuario")
  efectivo        Float?                @default(0)
  tarjeta         Float?                @default(0)
  cheque          Float?                @default(0)
  transferencia   Float?                @default(0)
  credito         Float?                @default(0)
  subtotal        Float?                @default(0)
  descuento       Float?                @default(0)
  iva             Float?                @default(0)
  iva_retenido    Float?                @default(0)
  iva_percivido   Float?                @default(0)
  total           Float?                @default(0)
  clase           Int?                  @default(1) // 1==Imprenta o tikets, 2==Formulario unico, 4==Factura electronica(dte)
  estado          EstadoFactura         @default(ACTIVO)
  FacturasDetalle FacturasDetalle[]
  id_sucursal     Int?
  Sucursal        Sucursales?           @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_facturacion_sucursal")

  @@index([id_sucursal], name: "fk_facturacion_sucursal_id")
  @@index([id_usuario], name: "fk_fatura_usuario_id")
  @@index([id_cliente], name: "fk_fatura_cliente_id")
  @@index([id_metodo_pago], name: "fk_fatura_methodo_pago_id")
  @@index([id_descuento], name: "fk_fatura_descuento_id")
  @@index([id_municipio], name: "fk_fatura_municipio_id")
  @@index([id_bloque], name: "fk_fatura_bloque_id")
}

model FacturasDetalle {
  id_factura_detalle Int                 @id @default(autoincrement())
  id_factura         Int
  Factura            Facturas            @relation(fields: [id_factura], references: [id_factura], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_detalle")
  id_catalogo        Int                 @default(0)
  Catalogo           Catalogo            @relation(fields: [id_catalogo], references: [id_catalogo], onDelete: NoAction, onUpdate: NoAction, map: "fk_factura_detalle_catalogo")
  codigo             String?             @db.Text
  nombre             String
  descripcion        String?             @db.Text
  precio_sin_iva     Float?              @default(0)
  precio_con_iva     Float?              @default(0)
  cantidad           Float               @default(0)
  subtotal           Float?              @default(0)
  descuento          Float?              @default(0)
  iva                Float?              @default(0)
  total              Float?              @default(0)
  fecha_creacion     DateTime            @default(now())
  id_descuento       Int?                @default(0)
  Descuento          FacturasDescuentos? @relation(fields: [id_descuento], references: [id_descuento], onDelete: NoAction, onUpdate: NoAction, map: "fk_fatura_detalle_descuento")

  @@index([id_descuento], name: "fk_fatura_detalle_descuento_id")
  @@index([id_factura], name: "fk_fatura_detalle_id")
  @@index([id_catalogo], name: "fk_factura_detalle_catalogo_id")
}

// ======================================================   Estrutura de INVENTARIO 
model Proveedores {
  id_proveedor      Int           @id @default(autoincrement())
  nombre            String?       @default("")
  giro              String?       @default("")
  razon_social      String?       @default("")
  registro_nrc      String?       @default("")
  nit               String?       @default("")
  id_municipio      Int?          @default(0)
  Municipio         Municipios?   @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_proveedor_municipio")
  direccion         String?       @default("")
  dui               String?       @default("")
  foto_url_nrc      String?       @default("")
  dias_credito      String?       @default("0")
  foto_obj_nrc      String?       @db.Text
  estado            Estado        @default(ACTIVO)
  fecha_creacion    DateTime      @default(now())
  nombre_contac_1   String?       @default("")
  telefono_contac_1 String?       @default("")
  correo_contac_1   String?       @default("")
  nombre_contac_2   String?       @default("")
  telefono_contac_2 String?       @default("")
  correo_contac_2   String?       @default("")
  nombre_contac_3   String?       @default("")
  telefono_contac_3 String?       @default("")
  correo_contac_3   String?       @default("")
  no_cuenta         String?       @default("")
  tipo_cuenta       String?       @default("")
  id_banco          Int?          @default(0)
  Banco             Bancos?       @relation(fields: [id_banco], references: [id_banco], onDelete: NoAction, onUpdate: NoAction, map: "fk_proveedor_banco")
  id_usuario        Int           @default(0)
  Usuario           Usuarios      @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_proveedor_usuario")
  id_tipo_proveedor Int?
  TipoProveedor     TiposCliente? @relation(fields: [id_tipo_proveedor], references: [id_tipo_cliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_proveedor_tipo")
  Compras           Compras[]

  @@index([id_banco], name: "fk_proveedor_banco_id")
  @@index([id_tipo_proveedor], name: "fk_proveedor_tipo_id")
  @@index([id_municipio], name: "fk_proveedor_municipio_id")
  @@index([id_usuario], name: "fk_proveedor_usuario_id")
}

model Compras {
  id_compras          Int              @id @default(autoincrement())
  numero_factura      String           @default("0")
  numero_quedan       String?          @default("0")
  tipo_inventario     TipoInventario?  @default(MP)
  detalle             String?          @db.Text
  id_proveedor        Int?
  nombre_proveedor    String?          @default("")
  dui_proveedor       String?          @default("")
  no_cheque           String?          @default("") // esto para cuando sea de credito y se paga
  Proveedor           Proveedores?     @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_compras_proveedor")
  tipo_pago           TipoPago         @default(CONTADO)
  tipo_compra         TipoCompra       @default(INTERNA)
  tipo_factura        TipoCompraFact   @default(GRABADO)
  id_usuario          Int              @default(0)
  Usuario             Usuarios         @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_compra_usuario")
  dias_credito        Int?             @default(0)
  subtotal            Float?           @default(0)
  descuento           Float?           @default(0)
  cesc                Float?           @default(0)
  fovial              Float?           @default(0)
  cotrans             Float?           @default(0)
  iva                 Float?           @default(0)
  iva_retenido        Float?           @default(0)
  iva_percivido       Float?           @default(0)
  total               Float?           @default(0)
  clase               ClaseFactura     @default(IMPRENTAOTICKETS) // 1==Imprenta o tikets, 2==Formulario unico, 4==Factura electronica(dte)
  estado              EstadoFactura    @default(ACTIVO)
  id_sucursal         Int?
  Sucursales          Sucursales?      @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_compras_sucursal")
  id_bodega           Int?
  Bodegas             Bodegas?         @relation(fields: [id_bodega], references: [id_bodega], onDelete: NoAction, onUpdate: NoAction, map: "fk_compras_bodega")
  id_tipo_factura     Int?             @default(2)
  FacturasTipos       FacturasTipos?   @relation(fields: [id_tipo_factura], references: [id_tipo_factura], onDelete: NoAction, onUpdate: NoAction, map: "fk_compras_tipo_factura")
  ComprasDetalle      ComprasDetalle[]
  fecha_creacion      DateTime         @default(now())
  fecha_actualizacion DateTime         @default(now())
  fecha_factura       DateTime?
  fecha_de_pago       DateTime?
  estado_pago         EstadoPago       @default(PENDIENTE)

  @@index([id_tipo_factura], name: "fk_compras_tipo_factura_id")
  @@index([id_sucursal], name: "fk_compras_sucursal_id")
  @@index([id_bodega], name: "fk_compras_bodega_id")
  @@index([id_usuario], name: "fk_compra_usuario_id")
  @@index([id_proveedor], name: "fk_compras_proveedor_id")
}

enum TipoInventario {
  MP
  CI
}

enum EstadoPago {
  PENDIENTE
  ENCHEQUE
  PAGADO
}

enum TipoPago {
  CONTADO
  CREDITO
  TARJETCREDITO
}

enum TipoCompra {
  INTERNA
  IMPORTACION
}

enum TipoCompraFact {
  GRABADO
  EXCENTO
}

enum ClaseFactura {
  IMPRENTAOTICKETS
  FROMUNICO
  FACELECTRONICA
}

model ComprasDetalle {
  id_compras_detalle   Int          @id @default(autoincrement())
  id_compras           Int
  Compras              Compras      @relation(fields: [id_compras], references: [id_compras], onDelete: NoAction, onUpdate: NoAction, map: "fk_compra_detalle")
  id_catalogo          Int?
  Catalogo             Catalogo?    @relation(fields: [id_catalogo], references: [id_catalogo], onDelete: NoAction, onUpdate: NoAction, map: "fk_compras_detalle_catalogo")
  codigo               String?      @db.Text
  nombre               String
  descripcion          String?      @db.Text
  costo_unitario       Float?       @default(0)
  cantidad             Float        @default(0)
  subtotal             Float?       @default(0)
  descuento_porcentaje Float?       @default(0)
  descuento_monto      Float?       @default(0)
  iva                  Float?       @default(0)
  total                Float?       @default(0)
  fecha_creacion       DateTime     @default(now())
  Kardex               Kardex[]
  Inventario           Inventario[]

  @@index([id_compras], name: "fk_compra_detalle_id")
  @@index([id_catalogo], name: "fk_compras_detalle_catalogo_id")
}

model Inventario {
  id_inventario        Int                    @id @default(autoincrement())
  id_catalogo          Int
  Catalogo             Catalogo               @relation(fields: [id_catalogo], references: [id_catalogo], onDelete: NoAction, onUpdate: NoAction, map: "fk_inventario_catalogo")
  id_compras_detalle   Int?
  ComprasDetalle       ComprasDetalle?        @relation(fields: [id_compras_detalle], references: [id_compras_detalle], onDelete: NoAction, onUpdate: NoAction, map: "fk_inventario_detalle")
  id_bodega            Int?
  Bodegas              Bodegas?               @relation(fields: [id_bodega], references: [id_bodega], onDelete: NoAction, onUpdate: NoAction, map: "fk_inventario_bodega")
  costo_unitario       Float?                 @default(0)
  existencia           Int?                   @default(0)
  costo_total          Float?                 @default(0)
  OrdenDeSalidaDetalle OrdenDeSalidaDetalle[]

  @@index([id_bodega], name: "fk_inventario_bodega_id")
  @@index([id_catalogo], name: "fk_inventario_catalogo_id")
  @@index([id_compras_detalle], name: "fk_inventario_detalle_id")
}

model Kardex {
  id_kardex          Int             @id @default(autoincrement())
  id_catalogo        Int
  Catalogo           Catalogo        @relation(fields: [id_catalogo], references: [id_catalogo], onDelete: NoAction, onUpdate: NoAction, map: "fk_kardex_catalogo")
  id_compras_detalle Int?
  ComprasDetalle     ComprasDetalle? @relation(fields: [id_compras_detalle], references: [id_compras_detalle], onDelete: NoAction, onUpdate: NoAction, map: "fk_kardex_detalle")
  tipo_movimiento    Int             @default(1) // 1=entrada, 2=salida
  descripcion        String?         @db.Text
  costo              Float?          @default(0)
  cantidad           Float?          @default(0)
  subtotal           Float?          @default(0)
  costo_promedio     Float?          @default(0)
  inventario         Float?          @default(0)
  total              Float?          @default(0)

  @@index([id_catalogo], name: "fk_kardex_catalogo_id")
  @@index([id_compras_detalle], name: "fk_kardex_detalle_id")
}

model Agenda {
  id_agenda      Int          @id @default(autoincrement())
  zona           String?
  id_sucursal    Int?
  Sucursales     Sucursales?  @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_agenda_sucursal")
  no_personas    String?
  nombre         String?
  telefono       String?
  turno          Turnos?
  inicio         DateTime
  fin            DateTime
  nota           String?      @db.Text
  id_usuario     Int?
  Usuario        Usuarios?    @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_agenda_usuario")
  estado         EstadoAgenda @default(PENDIENTE)
  fecha_creacion DateTime     @default(now()) @db.Timestamptz()

  @@index([id_sucursal], name: "fk_agenda_sucursal_id")
  @@index([id_usuario], name: "fk_agenda_usuario_id")
}

enum Turnos {
  DESAYUNO
  ALMUERZO
  CENA
}

model MotivoSalida {
  id_motivo Int    @id @default(autoincrement())
  nombre    String
  estado    Estado @default(ACTIVO)

  OrdenDeSalida OrdenDeSalida[]
}

model OrdenDeSalida {
  id_orden_salida     Int          @id @default(autoincrement())
  id_bodega           Int
  Bodegas             Bodegas      @relation(fields: [id_bodega], references: [id_bodega], onDelete: NoAction, onUpdate: NoAction, map: "fk_salida_bodega")
  id_motivo           Int
  MotivoSalida        MotivoSalida @relation(fields: [id_motivo], references: [id_motivo], onDelete: NoAction, onUpdate: NoAction, map: "fk_salida_motivo")
  id_usuario          Int
  Usuario             Usuarios     @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_salida_usuario")
  observacion         String?      @db.Text
  fecha_creacion      DateTime     @default(now())
  fecha_actualizacion DateTime     @default(now())

  @@index([id_bodega], name: "fk_salida_bodega_id")
  @@index([id_motivo], name: "fk_salida_motivo_id")
  @@index([id_usuario], name: "fk_salida_usuario_id")
}

model OrdenDeSalidaDetalle {
  id_orden_detalle Int        @id @default(autoincrement())
  id_catalogo      Int        @default(0)
  Catalogo         Catalogo   @relation(fields: [id_catalogo], references: [id_catalogo], onDelete: NoAction, onUpdate: NoAction, map: "fk_salida_detalle_catalogo")
  id_inventario    Int        @default(0)
  Inventario       Inventario @relation(fields: [id_inventario], references: [id_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk_salida_inventario")
  costo_unitario   Float      @default(0)
  cantidad         Float      @default(0)
  total            Float?     @default(0)
  fecha_creacion   DateTime   @default(now())
  estado           Estado     @default(ACTIVO)

  @@index([id_catalogo], name: "fk_salida_detalle_catalogo_id")
  @@index([id_inventario], name: "fk_salida_inventario_id")
}

enum EstadoAgenda {
  PENDIENTE
  CONFIRMADA
  COMPLETADA
  CANCELADA
}

model CierresDiarios {
  id_cierre          Int         @id @default(autoincrement())
  venta_bruta        Float?      @default(0)
  para_llevar        Float?      @default(0)
  tarjeta_credomatic Float?      @default(0)
  tarjeta_serfinza   Float?      @default(0)
  tarjeta_promerica  Float?      @default(0)
  bitcoin            Float?      @default(0)
  syke               Float?      @default(0)
  total_restante     Float?      @default(0)
  propina            Float?      @default(0)
  venta_nota_sin_iva Float?      @default(0)
  cortecia           Float?      @default(0)
  anti_cobrados      Float?      @default(0)
  anti_reservas      Float?      @default(0)
  certificado_regalo Float?      @default(0)
  hugo_app           Float?      @default(0)
  pedidos_ya         Float?      @default(0)
  compras            Float?      @default(0)
  entrega_efectivo   Float?      @default(0)
  fecha_creacion     DateTime    @default(now()) @db.Timestamptz()
  fecha_cierre       DateTime?   @default(now())
  observacion        String?     @db.Text
  id_usuario         Int?
  Usuario            Usuarios?   @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cierre_usuario")
  id_sucursal        Int?
  Sucursales         Sucursales? @relation(fields: [id_sucursal], references: [id_sucursal], onDelete: NoAction, onUpdate: NoAction, map: "fk_cierre_sucursal")

  @@index([id_sucursal], name: "fk_cierre_sucursal_id")
  @@index([id_usuario], name: "fk_cierre_usuario_id")
}
